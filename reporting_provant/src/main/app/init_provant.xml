<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:amqp="http://www.mulesoft.org/schema/mule/amqp" xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/amqp http://www.mulesoft.org/schema/mule/amqp/current/mule-amqp.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<quartz:connector name="Quartz" validateConnections="true" doc:name="Quartz">
        <reconnect-forever/>
    </quartz:connector>
    
    <flow name="init_rtvFlow" initialState="started">
        <quartz:inbound-endpoint jobName="CustomJob" repeatInterval="86400000" responseTimeout="10000" doc:name="Fire every 24 hour e.g." connector-ref="Quartz" startDelay="6000">
        	<quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <set-variable variableName="random"
    value="#[new java.util.Random().nextInt(100)]" doc:name="Set random number for correlation_id" />
        <set-variable variableName="endDate" value="#[server.dateTime]" doc:name="Set endDate"/>
        <set-variable variableName="temp" value="#[server.dateTime]" doc:name="Set temp (same as endDate, so not modifying endDate)"/>
        <set-variable variableName="startDate" value="#[flowVars.temp.plusHours(-24)]" doc:name="Set startDate 24 hours ago"/>
        <logger message="Build request for momu" level="INFO" doc:name="Build request for momu"/>
        <dw:transform-message doc:name="Build reporting request for momu">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{

    "correlation_id": "momu" ++ "_" ++ flowVars.random,

    "requestor": "provant",

    "tenant": "momu",

    "datetime_from": flowVars.startDate as :string {format: "yyyy:MM:dd HH:mm:ss"},
    
    "datetime_to": flowVars.endDate as :string {format: "yyyy:MM:dd HH:mm:ss"}

}]]></dw:set-payload>
        </dw:transform-message>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
        <amqp:outbound-endpoint queueName="reporting_requests" responseTimeout="10000" exchange-pattern="request-response" connector-ref="amqp_connector_provant_send_requests" doc:name="Send request to reporting_requests"/>
        <logger message="Request send for momu" level="INFO" doc:name="Request send for momu"/>
        <logger message="Build request for fomu" level="INFO" doc:name="Build request for fomu"/>
        <dw:transform-message doc:name="Build reporting request for fomu">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{

    "correlation_id": "fomu" ++ "_" ++ flowVars.random,

    "requestor": "provant",

    "tenant": "fomu",

    "datetime_from": flowVars.startDate as :string {format: "yyyy:MM:dd HH:mm:ss"},
    
    "datetime_to": flowVars.endDate as :string {format: "yyyy:MM:dd HH:mm:ss"}

}]]></dw:set-payload>
        </dw:transform-message>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
        <amqp:outbound-endpoint queueName="reporting_requests" responseTimeout="10000" exchange-pattern="request-response" connector-ref="amqp_connector_provant_send_requests" doc:name="Send request to reporting_requests"/>
        <logger message="Request is sent for fomu" level="INFO" doc:name="Request is sent for fomu"/>
        <logger message="Sent request for museumedelsmeedkunstjuwelenendiamant" level="INFO" doc:name="Sent request for museumedelsmeedkunstjuwelenendiamant (diva)"/>
        <dw:transform-message doc:name="Build reporting request for museumedelsmeedkunstjuwelenendiamant">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{

    "correlation_id": "museumedelsmeedkunstjuwelenendiamant" ++ "_" ++ flowVars.random,

    "requestor": "provant",

    "tenant": "museumedelsmeedkunstjuwelenendiamant",

    "datetime_from": flowVars.startDate as :string {format: "yyyy:MM:dd HH:mm:ss"},
    
    "datetime_to": flowVars.endDate as :string {format: "yyyy:MM:dd HH:mm:ss"}

}]]></dw:set-payload>
        </dw:transform-message>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
        <logger message="Request is sent for museumedelsmeedkunstjuwelenendiamant" level="INFO" doc:name="Request is sent for museumedelsmeedkunstjuwelenendiamant"/>
        <amqp:outbound-endpoint queueName="reporting_requests" responseTimeout="10000" exchange-pattern="request-response" connector-ref="amqp_connector_provant_send_requests" doc:name="Send request to reporting_requests"/>
    </flow>
</mule>
